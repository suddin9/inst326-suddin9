This is a commmit example
hiiiii
testing 123
This week I used AI to help with setting up github, I didn't know how to upload repository and I used chat gpt to figure out how to do it
I asked Ai the clear definition of how to use Arithmetic and Expressions, I understood it and still need a lot more work with python.
I asked chatgpt to show me examples, it's still a bit confusing but as I progress throught this semester it will get easier. 
THis is the link to my chat gpt Chat explaning me how to use github and explain to me what Arithmetic and Expressions is 
the link to the chatgpt: https://chatgpt.com/c/68c44ace-1a24-8322-91bb-adc6e816cdec


week 2
This week I used ChatGpt to better understand Exercise 2, I used it to exlplain to me what "If, Elif, Else".
I had a basic understaning on it but I wanted it to explain it to me in a better and more clear way. 
here is the link to my ChatGPT chat: https://chatgpt.com/c/68c8879d-e1b8-832d-b957-eef007baf618
Takeaway:
Understanding if, elif, and else is essential for controlling program flow.
String insertion makes outputs dynamic and more readable.
Practicing with examples reinforces learning and builds confidence.
These basics form the foundation for more advanced Python programming.


testing

Week 3
This week I used ChatGPT to better understand Python functions, return values, and
string manipulation. I had a basic idea of what functions do, but I wanted a clearer
explanation and examples of how to return values and work with multi-line formatted strings.
https://chatgpt.com/c/68d308ea-729c-832e-a437-ee72a65fc520
Takeaways:
Functions are reusable blocks of code that help avoid duplication and make programs more organized.
Return values let functions produce outputs that can be used elsewhere in the program.
Strings are sequences of characters and can be manipulated with methods like .upper(), .strip(), and .split().
Multi-line strings can be created using loops, f-strings, and \n to format outputs neatly.
The zip() function allows iterating over multiple lists at once, which is helpful for aligning data in formatted outputs.

